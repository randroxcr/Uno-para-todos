/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;


import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.Icon;
import javax.swing.ImageIcon;       
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import java.applet.AudioClip;

/**
 *
 * @author Personal
 */
public class InterfazGrafica extends javax.swing.JFrame{
    private ArrayList<Icon> Cartas;
    private ArrayList<String> strCartas;
    private static HashMap<String, JLabel> cartasOponentes;
    private int pos;
    private int limiteRivales;
    private int rivales;
    private boolean bloqueoSeleccionar = false;
    private boolean bloqueoTurno = true;
    private boolean bloqueoNuevaCarta = false;
    private ActionListener listener;
    private String cartaSelect;
    private String colorSelect;
    private static AudioClip sonido;
    private static AudioClip sonidoNuevaCarta;
    private static AudioClip sonidoSalto;
    private static AudioClip theme;

    
    /**
     * Creates new form InterfazGrafica
     */
    public InterfazGrafica(ActionListener listener) {
        Cartas = new ArrayList<>();
        strCartas = new ArrayList<>();
        cartasOponentes = new HashMap<String,JLabel>();
        initComponents();
        setInit();
        setButtons();
        pos = 0;
        limiteRivales = 3;
        rivales = 0;
        this.listener = listener;
    }
    
    // Es un inicializador de variables extra.
    private void setInit(){
        setTitle("UNO");
        // Cambio el logo por la imagen de Uno.
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/uno.jpg")).getImage());
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon imagen;
        // Creo la imagen de fondo rojo.
        imagen = new ImageIcon(this.getClass().getResource("/Imagenes/fondoRojo.jpeg"));
        JLabel fondo= new JLabel(); 
        fondo.setIcon(imagen);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, imagen.getIconWidth(), imagen.getIconHeight());
        this.add(fondo, BorderLayout.CENTER);
        this.setSize(fondo.getWidth(), fondo.getHeight());
        sonidoSalto = java.applet.Applet.newAudioClip(getClass().getResource("/Musica/Crash-next.wav"));
        sonidoNuevaCarta = java.applet.Applet.newAudioClip(getClass().getResource("/Musica/Crash-Sig.wav"));
        sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Musica/Crash-salto.wav"));
        theme = java.applet.Applet.newAudioClip(getClass().getResource("/Musica/Crash-themeSong.wav"));
        theme.loop();
    }
    
    // Creo los botones.
    private void setButtons(){
        inicializarImagen();
        botonSeleccionar = new JButton("Seleccionar");
        botonNuevaCarta = new JButton("NuevaCarta");
        botonPasarTurno = new JButton("PasarTurno");
        botonSeleccionar.addActionListener(listener);
        botonNuevaCarta.addActionListener(listener);
        botonPasarTurno.addActionListener(listener); 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonAnterior = new javax.swing.JButton();
        botonSeleccionar = new javax.swing.JButton();
        botonSiguiente = new javax.swing.JButton();
        botonNuevaCarta = new javax.swing.JButton();
        botonPasarTurno = new javax.swing.JButton();
        cartaJugadorActual = new javax.swing.JLabel();
        jugadorDesconocido = new javax.swing.JLabel();
        jugadorDesconocidoDos = new javax.swing.JLabel();
        jugadorDesconocidoTres = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nombreRivalDos = new javax.swing.JLabel();
        nombreRivalUno = new javax.swing.JLabel();
        nombreRivalTres = new javax.swing.JLabel();
        labelDescarte = new javax.swing.JLabel();
        cartaDescarte = new javax.swing.JLabel();
        nombreJugadorActual = new javax.swing.JLabel();
        numeroCartasJugador3 = new javax.swing.JLabel();
        cartasJugadorActual = new javax.swing.JLabel();
        imagenColorActual = new javax.swing.JLabel();
        numeroCartasJugadorDos = new javax.swing.JLabel();
        numeroCartasJugadorTres = new javax.swing.JLabel();
        numeroCartasJugadorUno = new javax.swing.JLabel();
        cambiarNombreTexto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));

        jPanel1.setOpaque(false);

        botonAnterior.setBackground(new java.awt.Color(0, 0, 0));
        botonAnterior.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        botonAnterior.setForeground(new java.awt.Color(255, 255, 255));
        botonAnterior.setText("Anterior");
        botonAnterior.setBorderPainted(false);
        botonAnterior.setFocusable(false);
        botonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnteriorActionPerformed(evt);
            }
        });

        botonSeleccionar.setBackground(new java.awt.Color(0, 0, 0));
        botonSeleccionar.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        botonSeleccionar.setForeground(new java.awt.Color(255, 255, 255));
        botonSeleccionar.setText("Seleccionar");
        botonSeleccionar.setBorderPainted(false);
        botonSeleccionar.setFocusable(false);
        botonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarActionPerformed(evt);
            }
        });

        botonSiguiente.setBackground(new java.awt.Color(0, 0, 0));
        botonSiguiente.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        botonSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        botonSiguiente.setText("Siguiente");
        botonSiguiente.setBorderPainted(false);
        botonSiguiente.setFocusable(false);
        botonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteActionPerformed(evt);
            }
        });

        botonNuevaCarta.setBackground(new java.awt.Color(0, 0, 0));
        botonNuevaCarta.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        botonNuevaCarta.setForeground(new java.awt.Color(255, 255, 255));
        botonNuevaCarta.setText("NuevaCarta");
        botonNuevaCarta.setBorderPainted(false);
        botonNuevaCarta.setFocusable(false);
        botonNuevaCarta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaCartaActionPerformed(evt);
            }
        });

        botonPasarTurno.setBackground(new java.awt.Color(0, 0, 0));
        botonPasarTurno.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        botonPasarTurno.setForeground(new java.awt.Color(255, 255, 255));
        botonPasarTurno.setText("Paso");
        botonPasarTurno.setBorderPainted(false);
        botonPasarTurno.setFocusable(false);
        botonPasarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPasarTurnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(botonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(botonNuevaCarta, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(botonPasarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAnterior)
                    .addComponent(botonSeleccionar)
                    .addComponent(botonSiguiente))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonNuevaCarta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonPasarTurno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        cartaJugadorActual.setForeground(new java.awt.Color(204, 0, 0));

        nombreRivalDos.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        nombreRivalDos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        nombreRivalUno.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        nombreRivalUno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        nombreRivalTres.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        nombreRivalTres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelDescarte.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        labelDescarte.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDescarte.setText("Ultima Carta Jugada");

        nombreJugadorActual.setFont(new java.awt.Font("Palatino Linotype", 0, 24)); // NOI18N
        nombreJugadorActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        cartasJugadorActual.setBackground(new java.awt.Color(0, 0, 0));
        cartasJugadorActual.setFont(new java.awt.Font("Palatino Linotype", 0, 48)); // NOI18N
        cartasJugadorActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartasJugadorActual.setFocusable(false);

        numeroCartasJugadorDos.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        numeroCartasJugadorDos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numeroCartasJugadorDos.setFocusable(false);

        numeroCartasJugadorTres.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        numeroCartasJugadorTres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numeroCartasJugadorTres.setFocusable(false);

        numeroCartasJugadorUno.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        numeroCartasJugadorUno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numeroCartasJugadorUno.setFocusable(false);

        cambiarNombreTexto.setFont(new java.awt.Font("Palatino Linotype", 0, 24)); // NOI18N
        cambiarNombreTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cambiarNombreTexto.setToolTipText("");
        cambiarNombreTexto.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(nombreJugadorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cartasJugadorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(cartaJugadorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(imagenColorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(numeroCartasJugador3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addComponent(numeroCartasJugadorTres, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(numeroCartasJugadorUno, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(268, 268, 268))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(34, 34, 34)
                                                .addComponent(nombreRivalTres, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jugadorDesconocidoTres, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(nombreRivalUno, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jugadorDesconocido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nombreRivalDos, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jugadorDesconocidoDos, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(17, 17, 17))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(106, 106, 106)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cambiarNombreTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cartaDescarte, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelDescarte, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(184, 184, 184))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(numeroCartasJugadorDos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nombreRivalDos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jugadorDesconocidoDos, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numeroCartasJugadorDos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombreRivalTres, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nombreRivalUno, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jugadorDesconocido, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jugadorDesconocidoTres, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroCartasJugadorTres, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numeroCartasJugadorUno, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelDescarte, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cartaDescarte, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cambiarNombreTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addComponent(nombreJugadorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel1)
                                    .addGap(30, 30, 30)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(16, 16, 16)
                                            .addComponent(cartasJugadorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(cartaJugadorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(imagenColorActual, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(274, 274, 274)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(348, 348, 348)
                            .addComponent(numeroCartasJugador3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    public String getCartaSelect() {
        return cartaSelect;
    }

    public void setCartaSelect(String cartaSelect) {
        this.cartaSelect = cartaSelect;
    }

    public String getColorSelect() {
        return colorSelect;
    }

    public void setColorSelect(String colorSelect) {
        this.colorSelect = colorSelect;
    }
    
    // Desbloqueo todo.
    public void ActualTurno(){
        this.bloqueoNuevaCarta = false;
        this.bloqueoSeleccionar = false;
        this.bloqueoTurno = true; 
    }
    
    // Bloqueo todo.
    public void bloquearTodo(){
        this.bloqueoNuevaCarta = true;
        this.bloqueoSeleccionar = true;
        this.bloqueoTurno = false;
    }
    
    private void botonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteActionPerformed
        // Al tocar siguiente no muestra la carta en la posicion 0.
        if (pos != Cartas.size()-1){
            pos++;
        }
        if (pos == Cartas.size()){
            return;
        }
        sonido.play();
        cartaJugadorActual.setIcon(Cartas.get(pos));
        this.repaint();
    }//GEN-LAST:event_botonSiguienteActionPerformed

    private void botonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnteriorActionPerformed
        
        if (pos != 1 && pos != 0){
           pos--;
        }
        if (pos == 0 || Cartas.size() == 1){
            return;
        }
        sonido.play();
        cartaJugadorActual.setIcon(Cartas.get(pos));
        this.repaint();
    }//GEN-LAST:event_botonAnteriorActionPerformed

    
    private void botonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarActionPerformed
        if(pos == 0){
            return;
        }

        Cartas.remove(pos);
        String palabra = strCartas.remove(pos);
        String[] arreglo = palabra.split(" ");
        cartaSelect = arreglo[1];
        colorSelect = arreglo[0];
        if (pos == Cartas.size()){
            pos--;
        }
        cartaJugadorActual.setIcon(Cartas.get(pos));
        this.repaint();
        calcularCantidadCartas();
        listener.actionPerformed(evt);
    }//GEN-LAST:event_botonSeleccionarActionPerformed

   
    private void botonPasarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPasarTurnoActionPerformed

        if (bloqueoTurno == true){
            return;
        } 
        sonidoSalto.play();
        this.repaint();
        listener.actionPerformed(evt);
        System.out.println("something");
    }//GEN-LAST:event_botonPasarTurnoActionPerformed

    private void botonNuevaCartaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaCartaActionPerformed
        
        if (bloqueoSeleccionar == true || bloqueoNuevaCarta == true){
            return;
        }
        sonidoNuevaCarta.play();
        this.repaint();
        listener.actionPerformed(evt);
    }//GEN-LAST:event_botonNuevaCartaActionPerformed

    
    // Creo las cartas.
    public void crearCartas(String Color, String Nombre){
        String NombreCartas;
        String tarjeta;
        NombreCartas = "/Imagenes/" + Color + Nombre + ".jpg";
        tarjeta = Color + " " + Nombre;
        ImageIcon imagenTemp = new ImageIcon(this.getClass().getResource(NombreCartas));
        Icon icono = new ImageIcon(imagenTemp.getImage().getScaledInstance(cartaJugadorActual.getWidth(), cartaJugadorActual.getHeight(), Image.SCALE_DEFAULT));
        Cartas.add(icono);
        strCartas.add(tarjeta);
        calcularCantidadCartas();
    }
    
    // Calculo la cantidad de cartas.
    private void calcularCantidadCartas(){
        // La carta en la posicion 0, no se toma en cuenta y no se elige.
        String cantidadDeCartas;
        if (Cartas.size() == 1){
            cantidadDeCartas = "0";
        }else{
            cantidadDeCartas = Integer.toString(Cartas.size()-1); 
        }
        cartasJugadorActual.setText(cantidadDeCartas);
    }
    
    // Nombre al jugador Principal.
    public void configurarNombre(String nombrePrincipal){
        String Nombre = "Mano de " + nombrePrincipal;
        nombreJugadorActual.setText(Nombre);
    }
    
    // Bloqueo a cartaNueva.
    public void setBloqueoCarta(){
        bloqueoNuevaCarta = !bloqueoNuevaCarta;
        this.repaint();
    }
    
    public void autoDestruccion(){
        theme.stop();
        this.dispose();
    }
    
    // Bloqueo al boton paso.
    public void setBloqueoTurno(){
        bloqueoTurno = !bloqueoTurno;
        this.repaint();
    }
    
    // Inicializo la imagen por defecto.
    public void inicializarImagen(){
        ImageIcon imagenUno;
        Icon icono;
        imagenUno = new ImageIcon(this.getClass().getResource("/Imagenes/UnoCard.jpg"));
        icono = new ImageIcon(imagenUno.getImage().getScaledInstance(cartaJugadorActual.getWidth(),
                cartaJugadorActual.getHeight(), Image.SCALE_DEFAULT));
        cartaJugadorActual.setIcon(icono);
        cartaDescarte.setIcon(icono);
        this.repaint();
        Cartas.add(icono);
        strCartas.add("" + "Defecto");
    }
    
    // Cambio la imagen del descarte.
    public void cambiarImagenDescarte(String Color, String Nombre){
        ImageIcon imagenDescarte;
        Icon iconoDescarte;
        if (Nombre.equals("TomeCuatro") || Nombre.equals("SeleccionaColor")){
            Color = "";
        }
        String carta = Color + Nombre;
        imagenDescarte = new ImageIcon(this.getClass().getResource("/Imagenes/" + carta + ".jpg"));
        iconoDescarte = new ImageIcon(imagenDescarte.getImage().getScaledInstance(cartaJugadorActual.getWidth(),
                cartaJugadorActual.getHeight(), Image.SCALE_DEFAULT));
        cartaDescarte.setIcon(iconoDescarte);
        this.repaint();
    }
    
    // Cambio la imagen del color definida.
    public void seleccionarColor(String Color){
        ImageIcon imagenColor;
        Icon iconoColor;
        String formato;
        if (Color.equals("")){
            formato = "Undefined.jpg";
        }else{
            formato = Color + ".png";
        }
        // Creo la imagen.
        imagenColor = new ImageIcon(this.getClass().getResource("/Imagenes/" + formato));
        iconoColor = new ImageIcon(imagenColor.getImage().getScaledInstance(imagenColorActual.getWidth(),
                imagenColorActual.getHeight(), Image.SCALE_DEFAULT));
        imagenColorActual.setIcon(iconoColor);
        this.repaint();
    }
    
    public void actualizarPantalla(){ 
        this.update(this.getGraphics());
    } 

    
    public void turnoJugador(String jugadorActual){
        cambiarNombreTexto.setText(jugadorActual);
        this.repaint();
    }
    
    // Creo los rivales del juego.
    public void crearRivales(String Nombre, String imagen){
        if(rivales < limiteRivales){
            ImageIcon imagenTemp;
            Icon icono;
            imagenTemp = new ImageIcon(this.getClass().getResource("/ImagenesPerfil/" + imagen + ".jpg"));
            icono = new ImageIcon(imagenTemp.getImage().getScaledInstance(jugadorDesconocido.getWidth(),
                            jugadorDesconocido.getHeight(), Image.SCALE_DEFAULT));
            switch(rivales){
                case 0: // Rival del centro.
                    nombreRivalUno.setText(Nombre);
                    jugadorDesconocido.setIcon(icono);
                    numeroCartasJugadorUno.setText("7");
                    cartasOponentes.put(Nombre, numeroCartasJugadorUno);
                    break;
                    
                case 1: // Rival de la derecha.
                    nombreRivalDos.setText(Nombre);
                    jugadorDesconocidoDos.setIcon(icono);
                    numeroCartasJugadorDos.setText("7");
                    cartasOponentes.put(Nombre, numeroCartasJugadorDos);
                    break;
                    
                case 2: // Rival de la izquierda.
                    nombreRivalTres.setText(Nombre);
                    jugadorDesconocidoTres.setIcon(icono);
                    numeroCartasJugadorTres.setText("7");
                    cartasOponentes.put(Nombre, numeroCartasJugadorTres);
                    break;
                default:
                
            }
            rivales++;
        }
        this.repaint();
    }
    
    // Elimine todas las cartas.
    public void clear(){
        Icon cartaDefault = Cartas.get(0);
        String cartaStringDefault = strCartas.get(0);
        pos = 0;
        Cartas.clear();
        strCartas.clear();
        Cartas.add(cartaDefault);
        strCartas.add(cartaStringDefault);
        cartaJugadorActual.setIcon(Cartas.get(pos));
        this.repaint();
    }
 
    public void cambiarNumeroCartas(String jugador, String nuevaCantidad){
        JLabel temp;
        temp = cartasOponentes.get(jugador);
        temp.setText(nuevaCantidad);
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnterior;
    private javax.swing.JButton botonNuevaCarta;
    private javax.swing.JButton botonPasarTurno;
    private javax.swing.JButton botonSeleccionar;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JLabel cambiarNombreTexto;
    private javax.swing.JLabel cartaDescarte;
    private javax.swing.JLabel cartaJugadorActual;
    private javax.swing.JLabel cartasJugadorActual;
    private javax.swing.JLabel imagenColorActual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jugadorDesconocido;
    private javax.swing.JLabel jugadorDesconocidoDos;
    private javax.swing.JLabel jugadorDesconocidoTres;
    private javax.swing.JLabel labelDescarte;
    private javax.swing.JLabel nombreJugadorActual;
    private javax.swing.JLabel nombreRivalDos;
    private javax.swing.JLabel nombreRivalTres;
    private javax.swing.JLabel nombreRivalUno;
    private javax.swing.JLabel numeroCartasJugador3;
    private javax.swing.JLabel numeroCartasJugadorDos;
    private javax.swing.JLabel numeroCartasJugadorTres;
    private javax.swing.JLabel numeroCartasJugadorUno;
    // End of variables declaration//GEN-END:variables
}
